name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  REGION: ${{ vars.GCP_REGION }}
  SERVICE_NAME: carbone-service
  IMAGE_NAME: cloudrun-carbone

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker to use gcloud as a credential helper
      run: gcloud auth configure-docker

    - name: Build image with Cloud Build
      run: |
        gcloud builds submit \
          --config cloudbuild.yaml \
          --substitutions _IMAGE_NAME=$IMAGE_NAME

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$IMAGE_NAME:latest \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated=false \
          --set-env-vars CARBONE_EE_STUDIO=true \
          --set-env-vars CARBONE_EE_LICENSE=${{ secrets.CARBONE_EE_LICENSE }} \
          --port 4000 \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10

    - name: Get service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --platform=managed --region=$REGION --format='value(status.url)')
        echo "Service deployed at: $SERVICE_URL"
        echo "SERVICE_URL=$SERVICE_URL" >> $GITHUB_ENV

    - name: Output deployment info
      run: |
        echo "::notice title=Deployment Complete::Service deployed successfully to $SERVICE_URL"
        echo "::notice title=Authentication::Service requires authentication - use 'gcloud auth print-identity-token' to get a token"